      	      	LOC 0               	;BEGIN AT LOCATION 0
000000	000000	Data 0              	;R0 = 0 → triggers JZ
000001	000003	Data 3              	;R1 = 3 → triggers JNE
000002	000001	Data 1              	;Condition code = 1 → triggers JC
000003	000031	Data End            	;MEM[3] → target for indirect conditional jumps
000004	000020	Data JMAaddr        	;MEM[4] → target for indirect JMA
000005	000022	Data JSRaddr        	;MEM[5] → target for indirect JSR
      	      	LOC 5               
000005	002000	LDR 0,0,0           	;Load 0 into R0
000006	002401	LDR 1,0,1           	;Load 3 into R1
000007	006002	LDA 0,0,2           	;Set Condition Code to 1
000010	020043	JZ 0,0,3,1          	;Indirect jump via MEM[3] → End
000011	022443	JNE 1,0,3,1         	;Indirect jump via MEM[3] → End
000012	024043	JCC 0,0,3,1         	;Indirect jump via MEM[3] → End
000013	026401	JMA 0,4,1           	;Indirect unconditional jump via MEM[4] → LOC 16
000014	030501	JSR 0,5,1           	;Indirect subroutine jump via MEM[5] → LOC 18
      	      	LOC 16              
000020	000000	HLT                 	;Target for indirect JMA
      	      	LOC 18              
000022	003001	LDR 2,0,1           	;Subroutine load 3 into R2
000023	032400	RFS 5               	;Return with immediate value 5 in R0
      	      	LOC 20              
000024	036426	JGE 1,0,22          	;Jump Greater than or equal → R1 ≥ 0
000025	034430	SOB 1,0,24          	;Subtract One and Branch → R1 = 2 → jump
      	      	LOC 22              
000026	000000	HLT                 	;Stop after JGE
      	      	LOC 24              
000030	000000	HLT                 	;Stop after SOB
000031	000000	HLT                 	;Final stop
